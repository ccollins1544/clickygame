{"version":3,"sources":["components/Nav/index.js","components/Header/index.js","components/Footer/index.js","components/Wrapper/index.js","components/Card/index.js","components/Grid/index.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Nav","navBarClass","listClass","navBarBrand","elementID","children","className","id","href","icon","faMugHot","join","Header","library","add","fas","far","fab","faLinkedin","faDev","faGithub","Footer","target","size","Wrapper","props","Card","heading","SectionRow","fluid","Col","split","map","Home","state","pageTitle","this","Component","App","basename","window","location","pathname","console","log","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f56bf067.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMugHot } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Nav({ navBarClass, listClass, navBarBrand, elementID, children}) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" id={elementID}>\r\n      {navBarBrand === true && <a className=\"navbar-brand mb-0 h1\" href=\"/\"><FontAwesomeIcon icon={faMugHot} /> Clicky Game</a>} \r\n\r\n      <div className={[\"navbar-collapse\", navBarClass].join(\" \")}>\r\n        <ul className={[\"navbar-nav\", listClass].join(\" \")}>\r\n          {children}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faMugHot } from '@fortawesome/free-solid-svg-icons'\r\nimport Nav from '../Nav'\r\n\r\nfunction Header(){\r\n  return (\r\n    <header className=\"App-header\">\r\n      <div className=\"container-fluid clearfix\">\r\n      <Nav \r\n        navBarClass=\"collapse show\"\r\n        listClass= \"ml-auto\"\r\n        navBarBrand={true}\r\n        elementID=\"main-nav\"\r\n      >\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\".\"><FontAwesomeIcon icon={faMugHot} /> # </a>\r\n        </li>\r\n      </Nav>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Nav from '../Nav'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab, faLinkedin, faDev, faGithub} from '@fortawesome/free-brands-svg-icons'\r\n// Add all icons to the library so you can use it in your page\r\nlibrary.add(fas, far, fab, faLinkedin, faDev, faGithub)\r\n\r\nfunction Footer(){\r\n  return (\r\n    <footer id=\"main-footer\">\r\n      <Nav elementID=\"footer-nav\">\r\n        <li className=\"nav-item\"> \r\n          <a className=\"nav-link\" href=\"https://www.linkedin.com/in/ccollins1544/\" target=\"_blank\">\r\n            <FontAwesomeIcon icon={faLinkedin} size=\"2x\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\"> \r\n          <a className=\"nav-link\" href=\"https://dev.to/ccollins\" target=\"_blank\">\r\n            <FontAwesomeIcon icon={faDev} size=\"2x\" />\r\n          </a>\r\n        </li>\r\n        <li className=\"nav-item\"> \r\n          <a className=\"nav-link\" href=\"https://ccollins1544.github.io/\" target=\"_blank\">\r\n            <FontAwesomeIcon icon={faGithub} size=\"2x\" />\r\n          </a>\r\n        </li>\r\n      </Nav>\r\n    \r\n      {/* Footer Credits */}\r\n      <div id=\"footer-bottom\">\r\n        <div id=\"footer-info\">Copyright Â© 2019 | <a className=\"footer-link\" href=\".\">Clicky Game</a> |\r\n          <a className=\"footer-link\" href=\"https://github.com/ccollins1544/clickygame\"> Coding Bootcamp</a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <article className=\"content-wrapper container\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card bg-dark text-center\">\r\n      <div className=\"card-header\">\r\n        <h2>{props.heading}</h2>\r\n      </div>\r\n      <div className=\"card-body bg-light\">{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\nexport function SectionRow({ fluid, elementID, children }) {\r\n  return <div className={[\"section-block\", `row${fluid ? \"-fluid\" : \"\"}`].join(\" \")} id={elementID}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Wrapper from '../components/Wrapper'\r\nimport Card from '../components/Card'\r\nimport { Col, Row, Container, SectionRow } from \"../components/Grid\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    pageTitle: \"Home\",\r\n  };\r\n\r\n  render(){ \r\n    return (\r\n      <Wrapper id=\"main-container\">\r\n        <SectionRow elementID=\"main-section\">\r\n          <Col size=\"col-lg-12\">\r\n            <Card heading={this.state.pageTitle}>\r\n            </Card>\r\n          </Col>\r\n        </SectionRow>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Home from \"./pages/Home\";\n\n\nfunction App() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      {console.log(\"location:\", window.location.pathname)}\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route component={Home} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  ); \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}